<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />

    <title>@storybook/cli - Storybook</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    
    <link rel="icon" type="image/svg+xml" href="./favicon.svg" />
    
    <link
      rel="prefetch"
      href="./sb-common-assets/nunito-sans-regular.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="prefetch"
      href="./sb-common-assets/nunito-sans-bold.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link rel="stylesheet" href="./sb-common-assets/fonts.css" />

    <link href="./sb-manager/runtime.js" rel="modulepreload" />

    
    <link href="./sb-addons/links-0/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/essentials-controls-1/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/essentials-actions-2/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/essentials-backgrounds-3/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/essentials-viewport-4/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/essentials-toolbars-5/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/essentials-measure-6/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/essentials-outline-7/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/interactions-8/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/a11y-9/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/storysource-10/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/performance-11/manager-bundle.js" rel="modulepreload" />
    
    <link href="./sb-addons/storybook-12/manager-bundle.js" rel="modulepreload" />
       

    <style>
      #storybook-root[hidden] {
        display: none !important;
      }
    </style>

    
  <link rel="canonical" href="https://3.x--63da8268a0da9970db6992aa.chromatic.com/" />
<style>
  #storybook-root.embedded,
  #root.embedded {
    border-radius: 4px;
    min-height: 100vh;
  }
  #storybook-root.embedded::before,
  #root.embedded::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    border: 1px solid rgb(0 0 0 / 10%);
    border-radius: 4px;
    pointer-events: none;
    z-index: 99999;
  }
</style>

<script>
  window.addEventListener("load", function embedBorder() {
    if (!window.location.search.split('&').includes('embed=true')) return;
    setTimeout(function () {
      var root = document.getElementById("root") || document.getElementById("storybook-root");
      if (!root || !document.body) return;
      root.className = root.className ? root.className + ' embedded' : 'embedded';
      root.style.background = window.getComputedStyle(document.body).background;
      document.body.style.background = "transparent";
    });
  });
</script>

<script>
  window.addEventListener('message', function forwardResizeMessage(message) {
    const location = document.location.toString();
    if (location.indexOf('full=1') === -1) return;
    if (typeof message.data !== 'string' || message.data.indexOf('iframe.resize') === -1) return;
    try {
      const data = JSON.parse(message.data);
      if (data.src === location || !parseInt(data.height)) return;
      const height = Math.max(data.height + 80, 150);
      console.log('sending iframe.resize', height);
      window.parent.postMessage(JSON.stringify({
        src: location,
        context: 'iframe.resize',
        height: height
      }), '*');
    } catch (e) {
      console.warn(e);
    }
  }, false);
</script>
  </head>
  <body>
    <div id="root"></div>

    
    <script>
      
        
          window['FEATURES'] = {
  "warnOnLegacyHierarchySeparator": true,
  "buildStoriesJson": false,
  "storyStoreV7": true,
  "argTypeTargetsV7": true,
  "legacyDecoratorFileOrder": false,
  "disallowImplicitActionsInRenderV8": false,
  "interactionsDebugger": true
};
        
      
        
          window['REFS'] = {};
        
      
        
          window['LOGLEVEL'] = "info";
        
      
        
          window['DOCS_OPTIONS'] = {
  "defaultName": "Docs",
  "autodocs": false
};
        
      
        
          window['CONFIG_TYPE'] = "PRODUCTION";
        
      
        
      
        
      
    </script>
    

    <script type="module">
      import './sb-manager/runtime.js';

      
      import './sb-addons/links-0/manager-bundle.js';
      
      import './sb-addons/essentials-controls-1/manager-bundle.js';
      
      import './sb-addons/essentials-actions-2/manager-bundle.js';
      
      import './sb-addons/essentials-backgrounds-3/manager-bundle.js';
      
      import './sb-addons/essentials-viewport-4/manager-bundle.js';
      
      import './sb-addons/essentials-toolbars-5/manager-bundle.js';
      
      import './sb-addons/essentials-measure-6/manager-bundle.js';
      
      import './sb-addons/essentials-outline-7/manager-bundle.js';
      
      import './sb-addons/interactions-8/manager-bundle.js';
      
      import './sb-addons/a11y-9/manager-bundle.js';
      
      import './sb-addons/storysource-10/manager-bundle.js';
      
      import './sb-addons/performance-11/manager-bundle.js';
      
      import './sb-addons/storybook-12/manager-bundle.js';
      
    </script>

    <link href="./sb-preview/runtime.js" rel="prefetch" as="script" />
  <style> @media (max-width: 599px) { #back-to-chromatic { display: none !important; } } </style><a id="back-to-chromatic" style="display: inline-flex; border: 1px solid rgba(0,0,0,0.1); border-radius: 4px; background-color: rgba(255,255,255,0.97); box-shadow: 0 1px 3px 0 rgba(0,0,0,0.1); font-size: 10px; color: #000;position: fixed; bottom: 10px; left: 10px; z-index: 1;" href="https://www.chromatic.com/" target="_top"><img style="display: block; height: 16px; width: 16px; margin: 6px;" src="/__chromatic_xyz123__/icon-chroma.svg" alt="Chroma"/><img style="display: block; height: 10px; margin: 9px 6px 9px 0;" src="/__chromatic_xyz123__/badge-chromatic-publish-text.svg" alt="Published with Chromatic" /></a>
  <script>
    var designEmbed = window.location.search.slice(1).split('&').includes('designEmbed=true');
    if (designEmbed) {
      var actionButtonStyles = document.createElement('style');
      actionButtonStyles.type = 'text/css';
 

      var hiddenActionButtonTitles = [
        "Go full screen [F]",
        "Exit full screen [F]",
        "Open canvas in new tab",
      ];
      var titleCss = [];

      for (var i = 0; i < hiddenActionButtonTitles.length; i++) {
        var title = hiddenActionButtonTitles[i];
        titleCss.push('[title="' + title + '"]');
      }

      hiddenActionButtonTitles = titleCss.join(', ');

      var css = hiddenActionButtonTitles + '{ display: none !important; }' + ' #back-to-chromatic { display: none !important; }';

      if (actionButtonStyles.styleSheet) {
        // This is required for IE8 and below.
        actionButtonStyles.styleSheet.cssText = css;
      } else {
        actionButtonStyles.appendChild(document.createTextNode(css));
      }

      var head = document.head || document.getElementsByTagName('head')[0];
      head.appendChild(actionButtonStyles);

      function hideCanvasDocsButtons(times = 0) {
        var buttons = document.getElementsByTagName('button');

        head = document.head || document.getElementsByTagName('head')[0];

        var classNames = [];
        for (var i = 0; i < buttons.length; i++) {          

          if (buttons[i].innerHTML === "Canvas") {
            var el = buttons[i].parentElement;
            var elSpacer = el.parentElement.nextElementSibling;
            if (el) {
              classNames.push(el.className);
            }
            if (elSpacer) {
              classNames.push(elSpacer.className + ':first-of-type');
            }
          }
        }

        if (classNames.length < 3 && times < 5) {
          // this is a weird pattern but the buttons double render which makes it very hard to catch
          setTimeout(function() { hideCanvasDocsButtons(times + 1)}, 100);
        }

        var classNamesAsCSS = [];

        for (var i = 0; i < classNames.length; i++) {
          classNamesAsCSS.push('.' + classNames[i]);
        }

        var classNameString = classNamesAsCSS.join(', ');
        var canvasDocCSS = classNameString + '{ display: none; }';

        var canvasDocStyles = document.createElement('style');
        canvasDocStyles.type = 'text/css';

        if (canvasDocStyles.styleSheet) {
          // This is required for IE8 and below.
          canvasDocStyles.styleSheet.cssText = canvasDocCSS;
        } else {
          canvasDocStyles.appendChild(document.createTextNode(canvasDocCSS));
        }


        head.appendChild(canvasDocStyles);
      }

      setTimeout(hideCanvasDocsButtons, 100);
    }
  </script>
  </body>
</html>
